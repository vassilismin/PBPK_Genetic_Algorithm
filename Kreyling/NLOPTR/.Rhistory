, "MING" = "#E69F00")
create.plots <- function(compartment){
excreta <- compartment %in% c("Feces", "Urine")
ggplot(data = solution_MANG)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MANG"',linetype = '"MANG"'),  size=1.5,alpha = 0.7) +
geom_line(data=solution_FPG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"FPG"',linetype ='"FPG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_MING, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MING"',linetype ='"MING"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_PNG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color =  '"PNG"',linetype =  '"PNG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_SPPCG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"SPPCG"',linetype ='"SPPCG"'), size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = ifelse(excreta,expression("TiO2 (" * mu * "g)"),expression("TiO2 (" * mu* "g/g tissue)" )),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
{if(compartment %in% c("Blood" ))scale_y_continuous(trans='log10')}+
scale_color_manual("", values=cls)+
scale_linetype_manual("Models", values=ltp) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
axis.text = element_text(size = 14))
}
plots <- lapply(names(observations)[2:length(observations)],create.plots)
p1 <-  plots[[1]]
p2 <-  plots[[2]]
p3 <-  plots[[3]]
p4 <-  plots[[4]]
p5 <-  plots[[5]]
p6 <-  plots[[6]]
p7 <-  plots[[7]]
p8 <-  plots[[8]]
p9 <-  plots[[9]]
#gridExtra::grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8, p9,p10, nrow = 4)
#gridExtra::grid.arrange(p5,p6,p7,p8,nrow = 2)
#gridExtra::grid.arrange(p9,p10,nrow = 2)
ggpubr::ggarrange(p1, p2, p3, p4,p5,p6,p7,p8, p9, ncol=3, nrow=4,
common.legend = TRUE, legend="right")
save.image(file = "Benchmarking.RData")
create.plots <- function(compartment){
excreta <- compartment %in% c("Feces", "Urine")
ggplot(data = solution_MANG)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MANG"',linetype = '"MANG"'),  size=1.5,alpha = 0.7) +
geom_line(data=solution_FPG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"FPG"',linetype ='"FPG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_MING, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MING"',linetype ='"MING"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_PNG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color =  '"PNG"',linetype =  '"PNG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_SPPCG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"SPPCG"',linetype ='"SPPCG"'), size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = ifelse(excreta,expression("TiO2 (" * mu * "g)"),expression("TiO2 (" * mu* "g/g tissue)" )),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
{if(compartment %in% c("Blood", "Kidneys", "Bone", "Rob" ))scale_y_continuous(trans='log10')}+
scale_color_manual("", values=cls)+
scale_linetype_manual("Models", values=ltp) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
axis.text = element_text(size = 14))
}
plots <- lapply(names(observations)[2:length(observations)],create.plots)
p1 <-  plots[[1]]
p2 <-  plots[[2]]
p3 <-  plots[[3]]
p4 <-  plots[[4]]
p5 <-  plots[[5]]
p6 <-  plots[[6]]
p7 <-  plots[[7]]
p8 <-  plots[[8]]
p9 <-  plots[[9]]
#gridExtra::grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8, p9,p10, nrow = 4)
#gridExtra::grid.arrange(p5,p6,p7,p8,nrow = 2)
#gridExtra::grid.arrange(p9,p10,nrow = 2)
ggpubr::ggarrange(p1, p2, p3, p4,p5,p6,p7,p8, p9, ncol=3, nrow=4,
common.legend = TRUE, legend="right")
create.plots <- function(compartment){
excreta <- compartment %in% c("Feces", "Urine")
ggplot(data = solution_MANG)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MANG"',linetype = '"MANG"'),  size=1.5,alpha = 0.7) +
geom_line(data=solution_FPG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"FPG"',linetype ='"FPG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_MING, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MING"',linetype ='"MING"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_PNG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color =  '"PNG"',linetype =  '"PNG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_SPPCG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"SPPCG"',linetype ='"SPPCG"'), size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = ifelse(excreta,expression("TiO2 (" * mu * "g)"),expression("TiO2 (" * mu* "g/g tissue)" )),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
{if(compartment %in% c("Blood", "Kidneys", "Bone", "Rob" ))scale_y_continuous(trans='log10')}+
scale_color_manual("", values=cls)+
scale_linetype_manual("Models", values=ltp) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=16,face="bold"),
legend.text = element_text(size=14))
}
plots <- lapply(names(observations)[2:length(observations)],create.plots)
p1 <-  plots[[1]]
p2 <-  plots[[2]]
p3 <-  plots[[3]]
p4 <-  plots[[4]]
p5 <-  plots[[5]]
p6 <-  plots[[6]]
p7 <-  plots[[7]]
p8 <-  plots[[8]]
p9 <-  plots[[9]]
#gridExtra::grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8, p9,p10, nrow = 4)
#gridExtra::grid.arrange(p5,p6,p7,p8,nrow = 2)
#gridExtra::grid.arrange(p9,p10,nrow = 2)
ggpubr::ggarrange(p1, p2, p3, p4,p5,p6,p7,p8, p9, ncol=3, nrow=4,
common.legend = TRUE, legend="right")
create.plots <- function(compartment){
excreta <- compartment %in% c("Feces", "Urine")
ggplot(data = solution_MANG)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MANG"',linetype = '"MANG"'),  size=1.5,alpha = 0.7) +
geom_line(data=solution_FPG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"FPG"',linetype ='"FPG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_MING, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MING"',linetype ='"MING"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_PNG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color =  '"PNG"',linetype =  '"PNG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_SPPCG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"SPPCG"',linetype ='"SPPCG"'), size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = ifelse(excreta,expression("TiO2 (" * mu * "g)"),expression("TiO2 (" * mu* "g/g tissue)" )),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
{if(compartment %in% c("Blood", "Kidneys", "Bone", "Rob" ))scale_y_continuous(trans='log10')}+
scale_color_manual("", values=cls)+
scale_linetype_manual("Models", values=ltp) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14))
}
plots <- lapply(names(observations)[2:length(observations)],create.plots)
p1 <-  plots[[1]]
p2 <-  plots[[2]]
p3 <-  plots[[3]]
p4 <-  plots[[4]]
p5 <-  plots[[5]]
p6 <-  plots[[6]]
p7 <-  plots[[7]]
p8 <-  plots[[8]]
p9 <-  plots[[9]]
#gridExtra::grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8, p9,p10, nrow = 4)
#gridExtra::grid.arrange(p5,p6,p7,p8,nrow = 2)
#gridExtra::grid.arrange(p9,p10,nrow = 2)
ggpubr::ggarrange(p1, p2, p3, p4,p5,p6,p7,p8, p9, ncol=3, nrow=4,
common.legend = TRUE, legend="right")
#save.image(file = "Benchmarking.RData")
library(ggplot2)
# Defining the linetype and colour of each curve
ltp <- c("MANG" = "twodash", "FPG" = "solid", "PNG" = "dotted","SPPCG" = "dashed"
,"MING" = "dotdash" )
cls <-  c("MANG" = "#56B4E9",  "FPG" ="#000000", "PNG" = "#009E73", "SPPCG" ="#CC79A7",
"Observations" = "#D55E00"
, "MING" = "#E69F00")
create.plots <- function(compartment){
excreta <- compartment %in% c("Feces", "Urine")
ggplot(data = solution_MANG)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MANG"',linetype = '"MANG"'),  size=1.5,alpha = 0.7) +
geom_line(data=solution_FPG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"FPG"',linetype ='"FPG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_MING, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MING"',linetype ='"MING"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_PNG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color =  '"PNG"',linetype =  '"PNG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_SPPCG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"SPPCG"',linetype ='"SPPCG"'), size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = ifelse(excreta,expression("TiO2 (" * mu * "g)"),expression("TiO2 (" * mu* "g/g tissue)" )),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
{if(compartment %in% c("Blood", "Kidneys", "Bone", "Rob", "Lungs" ))scale_y_continuous(trans='log10')}+
scale_color_manual("", values=cls)+
scale_linetype_manual("Models", values=ltp) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14))
}
plots <- lapply(names(observations)[2:length(observations)],create.plots)
p1 <-  plots[[1]]
p2 <-  plots[[2]]
p3 <-  plots[[3]]
p4 <-  plots[[4]]
p5 <-  plots[[5]]
p6 <-  plots[[6]]
p7 <-  plots[[7]]
p8 <-  plots[[8]]
p9 <-  plots[[9]]
#gridExtra::grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8, p9,p10, nrow = 4)
#gridExtra::grid.arrange(p5,p6,p7,p8,nrow = 2)
#gridExtra::grid.arrange(p9,p10,nrow = 2)
ggpubr::ggarrange(p1, p2, p3, p4,p5,p6,p7,p8, p9, ncol=3, nrow=4,
common.legend = TRUE, legend="right")
#save.image(file = "Benchmarking.RData")
create.plots <- function(compartment){
excreta <- compartment %in% c("Feces", "Urine")
ggplot(data = solution_MANG)+
geom_line( aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MANG"',linetype = '"MANG"'),  size=1.5,alpha = 0.7) +
geom_line(data=solution_FPG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"FPG"',linetype ='"FPG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_MING, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"MING"',linetype ='"MING"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_PNG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color =  '"PNG"',linetype =  '"PNG"'), size=1.5,alpha = 0.7) +
geom_line(data=solution_SPPCG, aes_string(x= "Time", y= rlang::expr(!!compartment),
color = '"SPPCG"',linetype ='"SPPCG"'), size=1.5,alpha = 0.7) +
geom_point(data=observations, aes_string(x="Time", y= rlang::expr(!!compartment),
color='"Observations"'), size=4)+
labs(title = rlang::expr(!!compartment),
y = ifelse(excreta,expression("TiO2 (" * mu * "g)"),expression("TiO2 (" * mu* "g/g tissue)" )),
x = "Time (hours)")+
theme(plot.title = element_text(hjust = 0.5))+
{if(compartment %in% c("Blood", "Kidneys", "Bone", "Rob", "Lungs", "Heart" ))scale_y_continuous(trans='log10')}+
scale_color_manual("", values=cls)+
scale_linetype_manual("Models", values=ltp) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
axis.title=element_text(size=14),
legend.text = element_text(size=14))
}
plots <- lapply(names(observations)[2:length(observations)],create.plots)
p1 <-  plots[[1]]
p2 <-  plots[[2]]
p3 <-  plots[[3]]
p4 <-  plots[[4]]
p5 <-  plots[[5]]
p6 <-  plots[[6]]
p7 <-  plots[[7]]
p8 <-  plots[[8]]
p9 <-  plots[[9]]
#gridExtra::grid.arrange(p1,p2,p3,p4,p5,p6,p7,p8, p9,p10, nrow = 4)
#gridExtra::grid.arrange(p5,p6,p7,p8,nrow = 2)
#gridExtra::grid.arrange(p9,p10,nrow = 2)
ggpubr::ggarrange(p1, p2, p3, p4,p5,p6,p7,p8, p9, ncol=3, nrow=4,
common.legend = TRUE, legend="right")
#save.image(file = "Benchmarking.RData")
c(1.60E+12,1.60E+07,3.83E+10,6.38E+10)
c(1.60E+12,1.60E+07,3.83E+10,6.38E+10)/1000
ENM <- "TiO2"
S2 <- matrix(c(0.00195,	0.1156,
0,      	0    ,
0.08675,	0.7542),
nrow=3, ncol=2, byrow = TRUE)
if (ENM == "CuO"){
kdis <- S2[1,1]
a_bio <- S2[1,2]
}else if(ENM == "TiO2"){
kdis <- S2[2,1]
a_bio <- S2[2,2]
}else if(ENM == "ZnO"){
kdis <- S2[3,1]
a_bio <- S2[3,2]
}else {stop("Select a valid ENM")
}
kdis
a_bio
# Load S3 table data from supplementary material (Species specific parameters)
#S3 <- openxlsx::read.xlsx("nanoBio params.xlsx", sheet = 3, colNames = T, rowNames = T)
S3 <- matrix(c(3.5575E-08,	6.80E-07,	3    ,	8  ,	2657.4,	3.00E+03,	4.00E+06,
2         ,	3	      , 60   ,	365,	3650  ,	912.5   ,	2920,
1         ,	1       ,	12.39,	24 , 	40.83 ,	1.67,	2.65E-02,
7.32      ,  	7.32  ,	7.32 ,	6  ,	7     ,	4.5,	5,
0         ,	0       ,	0.2  ,	0.5,	0.5   ,	0.35,	0.8
), nrow = 5, byrow=TRUE)
# M_i (mg): Wet body mass of individual organism
# L_n (days): Lifespan
# B_n (mg.m^3): Biomass density
# pH_n (-): species pH
# a_n (-): Assimilation efficiency
# S. capricornutum parameters (#1)
M_1 <- S3[1,1]
L_1 <- S3[2,1]
B_1 <- S3[3,1]
pH_1 <- S3[4,1]
a_1 <- S3[5,1]
# F. crotonensis parameters (#2)
M_2 <- S3[1,2]
L_2 <- S3[2,2]
B_2 <- S3[3,2]
pH_2 <- S3[4,2]
a_2 <- S3[5,2]
# D. magna parameters (#3)
M_3 <- S3[1,3]
L_3 <- S3[2,3]
B_3 <- S3[3,3]
pH_3 <- S3[4,3]
a_3 <- S3[5,3]
# H. azteca parameters (#4)
M_4 <- S3[1,4]
L_4 <- S3[2,4]
B_4 <- S3[3,4]
pH_4 <- S3[4,4]
a_4 <- S3[5,4]
B_3
B_3
a_3
a_enm_3
density <- 1280
d <- density
ENM <-material
d <- density#1280 # sediment density (kg/m^3)
# Load S1 table data from supplementary material
S1 <- c(1.60E+12,1.60E+07,3.83E+10,6.38E+10)
Vw <- S1[1]    # (l) Volume of water compartment
Vss <- S1[2]   # (kg) Volume of suspended sediment compartment
Vsed <- S1[3]  # (kg) Volume of sediment solids compartment
Vsedw <- S1[4] # (l) Volume sediment water compartment
# Load S2 table data from supplementary material
S2 <- matrix(c(0.00195,	0.1156,
0,      	0    ,
0.08675,	0.7542),
nrow=3, ncol=2, byrow = TRUE)
if (ENM == "CuO"){
kdis <- S2[1,1]
a_bio <- S2[1,2]
}else if(ENM == "TiO2"){
kdis <- S2[2,1]
a_bio <- S2[2,2]
}else if(ENM == "ZnO"){
kdis <- S2[3,1]
a_bio <- S2[3,2]
}else {stop("Select a valid ENM")
}
# Load S3 table data from supplementary material (Species specific parameters)
#S3 <- openxlsx::read.xlsx("nanoBio params.xlsx", sheet = 3, colNames = T, rowNames = T)
S3 <- matrix(c(3.5575E-08,	6.80E-07,	3    ,	8  ,	2657.4,	3.00E+03,	4.00E+06,
2         ,	3	      , 60   ,	365,	3650  ,	912.5   ,	2920,
1         ,	1       ,	12.39,	24 , 	40.83 ,	1.67,	2.65E-02,
7.32      ,  	7.32  ,	7.32 ,	6  ,	7     ,	4.5,	5,
0         ,	0       ,	0.2  ,	0.5,	0.5   ,	0.35,	0.8
), nrow = 5, byrow=TRUE)
# M_i (mg): Wet body mass of individual organism
# L_n (days): Lifespan
# B_n (mg.m^3): Biomass density
# pH_n (-): species pH
# a_n (-): Assimilation efficiency
# S. capricornutum parameters (#1)
M_1 <- S3[1,1]
L_1 <- S3[2,1]
B_1 <- S3[3,1]
pH_1 <- S3[4,1]
a_1 <- S3[5,1]
# F. crotonensis parameters (#2)
M_2 <- S3[1,2]
L_2 <- S3[2,2]
B_2 <- S3[3,2]
pH_2 <- S3[4,2]
a_2 <- S3[5,2]
# D. magna parameters (#3)
M_3 <- S3[1,3]
L_3 <- S3[2,3]
B_3 <- S3[3,3]
pH_3 <- S3[4,3]
a_3 <- S3[5,3]
# H. azteca parameters (#4)
M_4 <- S3[1,4]
L_4 <- S3[2,4]
B_4 <- S3[3,4]
pH_4 <- S3[4,4]
a_4 <- S3[5,4]
# V. constricta parameters (#5)
M_5 <- S3[1,5]
L_5 <- S3[2,5]
B_5 <- S3[3,5]
pH_5 <- S3[4,5]
a_5 <- S3[5,5]
# P. promelas parameters (#6)
M_6 <- S3[1,6]
L_6 <- S3[2,6]
B_6 <- S3[3,6]
pH_6 <- S3[4,6]
a_6 <- S3[5,6]
# O. mykiss parameters (#7)
M_7 <- S3[1,7]
L_7 <- S3[2,7]
B_7 <- S3[3,7]
pH_7 <- S3[4,7]
a_7 <- S3[5,7]
# Load S4 table data from supplementary material (?????? specific parameters)
if (ENM == "CuO"){
S4 <- matrix(c(2.7779E-02,	2.7779E-02,	1.60E-02,	5.79E-04,	7.68E-03,	9.60E-04,	4.32E-05,
NA,	NA,	1.60E-04,	4.80E-05,	7.68E-05,	0.00E+00,	0.00E+00,
1.407E-07,	1.407E-07,	1.60E-02,	8.655E-01,	7.29E-03,	5.125E-03,	6.30E-02,
NA,	NA,	1.60E-08,	4.80E-05,	7.68E-06,	7.02E-06,	7.69E-02,
NA,	NA,	3.32E-01,	7.20E-01,	4.10E-01,	6.00E-02,	6.00E-02,
1.728E-04,	3.00E-04,	2.90E-01,	6.375E-05,	7.68E-06,	7.02E-07,	2.00E-06,
0,	0,	2.90E-01,	2.52E-03,	1.92E+00,	1.90E-02,	1.70E-02),nrow=7, byrow=TRUE)
}else if (ENM == "TiO2"){
S4 <- matrix(c(
# original FW_TiO2 excel values
3.25E-03,	3.25E-03,	0.016,	0.000579019,0.007676676,	9.60E-04,	4.32E-05,
0,	0,	1.60E-04,	4.80E-05,	7.68E-05,	0.00E+00,	0.00E+00,
1.41E-07,	1.41E-07,	1.60E-02,	0.443560722,	0.007292843,	0.005125,	2.00E-06,
0,	0,	1.60E-08,	4.80E-05,	7.67668E-06,	7.01754E-06,	0.076923077,
0,	0,	3.26E-01,	1.37E-01,	3.00E-02,	3.00E-01,	3.00E-01,
1.728E-04,	3.00E-04,	1.60E-02,	6.375E-05,	7.67668E-06,	7.01754E-07,	2.00E-06,
0,	0,	2.90E-01,	0.010400734,	1.919804651,	1.90E-02,	2.00E-03
),nrow=7, byrow=TRUE)
}else if (ENM == "ZnO"){
S4 <- matrix(c(3.19E-02,	3.19E-02,	1.60E-02,	5.79E-04,	7.68E-03,	9.60E-04,	4.32E-05,
0,	0,	1.50E-04,	4.80E-05,	7.68E-02,	0.00E+00,	0.00E+00,
1.41E-07,	1.41E-07,	2.10E-04,	4.40E-01,	7.29E-03,	5.13E-03,	2.00E-06,
NA,	NA,	1.60E-08,	4.80E-05,	7.68E-06,	7.02E-06,	7.69E-02,
NA,	NA,	3.30E-01,	4.90E-01,	3.32E-01,	3.00E-01,	3.00E-01,
1.73E-04,	3.00E-04,	1.60E-02,	6.38E-05,	7.68E-06,	7.02E-07,	2.00E-06,
0.00E+00,	0.00E+00,	2.90E-01,	1.04E-02,	1.92E+00,	1.90E-02,	1.10E-02
),nrow=7, byrow=TRUE)
}else {stop("Select a valid ENM")
}
# k_u1_n (L/(mg*day)): Uptake from water
# k_u2_n (L/(mg*day)): Uptake from solids
# k_u3_n (L/(mg*day)): Uptake of dissolved ion from water
# k_d_n  (g/(mg*day)): Ingestion rate
# a_enm  (-): ENM/Metallic assimilation efficiency
# k_e_n  (g/(mg*day)): Fecal elimination rate
# k_edis_n (g/(mg*day)): Fecal elimination rate of dissolved ion
# S. capricornutum parameters (#1)
k_u1_1 <- S4[1,1]/1000
k_u2_1 <- S4[2,1]/1000/d
k_u3_1 <- S4[3,1]/1000
k_d_1 <- S4[4,1]*1000
a_enm_1 <- S4[5,1]
k_e_1 <- S4[6,1]*1000
k_edis_1 <- S4[7,1]*1000
# F. crotonensis parameters (#2)
k_u1_2 <- S4[1,2]/1000
k_u2_2 <- (S4[2,2]/1000)/d
k_u3_2 <- S4[3,2]/1000
k_d_2 <- S4[4,2]*1000
a_enm_2 <- S4[5,2]
k_e_2 <- S4[6,2]*1000
k_edis_2 <- S4[7,2]*1000
# D. magna parameters (#3)
k_u1_3 <- S4[1,3]/1000
k_u2_3 <- S4[2,3]/1000/d
k_u3_3 <- S4[3,3]/1000
k_d_3 <- S4[4,3]*1000
a_enm_3 <- S4[5,3]
k_e_3 <- S4[6,3]*1000
k_edis_3 <- S4[7,3]*1000
# H. azteca parameters (#4)
k_u1_4 <- S4[1,4]/1000
k_u2_4 <- S4[2,4]/1000/d
k_u3_4 <- S4[3,4]/1000
k_d_4 <- S4[4,4]*1000
a_enm_4 <- S4[5,4]
k_e_4 <- S4[6,4]*1000
k_edis_4 <- S4[7,4]*1000
# V. constricta parameters (#5)
k_u1_5 <- S4[1,5]/1000
k_u2_5 <- S4[2,5]/1000/d
k_u3_5 <- S4[3,5]/1000
k_d_5 <- S4[4,5]*1000
a_enm_5 <- S4[5,5]
k_e_5 <- S4[6,5]*1000
k_edis_5 <- S4[7,5]*1000
# P. promelas parameters (#6)
k_u1_6 <- S4[1,6]/1000
k_u2_6 <- S4[2,6]/1000/d
k_u3_6 <- S4[3,6]/1000
k_d_6 <- S4[4,6]*1000
a_enm_6 <- S4[5,6]
k_e_6 <- S4[6,6]*1000
k_edis_6 <- S4[7,6]*1000
# O. mykiss parameters (#7)
k_u1_7 <- S4[1,7]/1000
k_u2_7 <- S4[2,7]/1000/d
k_u3_7 <- S4[3,7]/1000
k_d_7 <- S4[4,7]*1000
a_enm_7 <- S4[5,7]
k_e_7 <- S4[6,7]*1000
k_edis_7 <- S4[7,7]*1000
a_enm_3
k_d_3
D_3
D_3 <- 1/L_3
D_3
L_3
1/1/2
0.059 / 6.36
t(0.059 / 6.36)
(0.059 / 6.36)^(-1)
6.36/0.059
k_u1_3
